type Greet {
  msg: String!
  name: String!
}

type Mutation {
  addResult(score: Float!): Result!
  changeName(name: String!): Greet!
}

type Query {
  greet: Greet!
  ranking: [Result!]
  results: [Result!]
  target: Target!
}

type Result {
  score: Float!
  target: Target!
  user: User!
}

type Target {
  angle: Float!
  calcRes: Float
  trigFunc: TrigFunc
}

enum TrigFunc {
  cos
  sin
  tan
}

type User {
  name: String!
}